{"version":3,"sources":["app/components/App.jsx","app/components/Main/Appointments.jsx","app/components/Main/Home.jsx","app/components/Main/Patients.jsx","app/components/MainFunctions.js","app/components/Patient/AddPatientPanel.jsx","app/components/Patient/PatientProfile.jsx","app/components/Patient/PatientsList.jsx","app/components/Patient/Profile/AddLabDetailsPanel.jsx","app/components/Patient/Profile/AddLabModule.jsx","app/components/Patient/Profile/AddNote.jsx","app/components/Patient/Profile/Appointments.jsx","app/components/Patient/Profile/Diagnosis.jsx","app/components/Patient/Profile/Info.jsx","app/components/Patient/Profile/Lab.jsx","app/components/Patient/Profile/Medicine.jsx","app/components/Patient/Profile/Notes.jsx","app/components/Patient/Profile/Vitals.jsx","app/components/Util/BookPanel.jsx","app/components/Util/DropDown.jsx","app/components/Util/Searchable.jsx","app/components/Util/config.js","app/initialize.js"],"names":["App","props","state","username","logout","bind","send_post_req","darken","remove_selected_patient","add_item","add_patient","navigate","move_appointment","add_appointment","set_appointments","add_dropdown_item","stop_medicine","show_patient_profile","data","setState","_id","email","password","lab_list","patients","selected_patient","events","diagnosis_list","medicine_list","medicine_dose_list","setTimeout","window","location","pathname","axios","get","then","init_app_state","res","catch","error","console","log","request","url","withCredentials","headers","Accept","Home","Component","BigCalendar","setLocalizer","momentLocalizer","moment","DragAndDropCalendar","Appointments","show_book_panel","selected_slot","history","close_book_panel","moveEvent","get_min_time","navigate_to_patient","event","book_slot","slot_info","eventTimeRangeFormat","start","end","push","title","time","Date","setHours","setMinutes","setSeconds","PatientsContainer","searched_patients","no_match","show_add_patient_panel","close_patient_panel","length","render_patients","search_patient","e","value","target","i","patient","patient_name","name","toLowerCase","startsWith","map","x","birth","age","gender","address","phone","post","darken_div","document","querySelector","classList","toggle","date","updated_patients","slice","split","reversed_birth","reverse","join","date1","date2","time_diff","Math","abs","getTime","diff_years","ceil","new_patient","id","floor","random","gravida","hypertension","diabetes","smoker","notes","lab","appointments","vitals","unshift","item","property","patient_index","appointment_index","appointment","desc","j","splice","apt","category","new_items","medicine","AddPatientPanel","patient_details","PatientsList","active_tab","selected_diagnosis_option","set_active_tab","show_route","option","create_diagnosis","set_selected_diagnosis_option","tab","el","tabs","querySelectorAll","Array","prototype","call","className","treatment","diagnosis_bj","format","AddLabDetailsPanel","toggle_add_lab_panel","set_selected_option","construct_lab_details","lab_results","lab_names","tests","trim","lab_obj","construct_lab","AddLabModule","EditorComponent","AddNote","editorState","EditorState","createEmpty","close_create_notes_panel","val","onEditorStateChange","construct_note","contentState","getCurrentContent","markup","match","note","content","add_note","start_date","end_date","render_date","placeholder","set_date","type","_d","condition","key","current_date","description","Diagnosis","selected_option","category_list","items","render_diagnosis","diagnosis","Info","Lab","lab_analysis_list","lab_details","add_lab_details_panel","selected_options","construct_lab_list","nextProps","render_lab_analysis_list","render_lab_unit_list","render_columns","add_lab_item","new_selected_options","lab_analysis_item","z","render_lab_analysis_div","filtered_tests","filter","test","indexOf","sort","a","b","Medicine","selected_medicine_option","selected_medicine_dose_option","set_selected_medicine_option","set_selected_medicine_dose_option","toDateString","create_medicine","render_active_medicine","render_inactive_medicine","stopped","strength","dose","input","add_medicine","Notes","show_create_notes_panel","expand_recent_notes","show_notes","expand_note","parent","parentNode","lastChild","childNodes","Vitals","render_vitals","add_vitals","blood_pressure_systolic","blood_pressure_diastolic","pulse","temperature","respiratory_rate","saturation","oxygen","bloodpressure","vital","systolic","diastolic","BookPanel","construct_appointment","DropDown","toggle_select_dropdown_option","textContent","create_new_dropdown_option","preventDefault","nodeName","nextSibling","Searchable","searched_options","search_item","options_list","render_options","option_name","previousSibling","set_option","ip_address","addEventListener","ReactDOM","render"],"mappings":"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","file":"public/app.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport {\r\n\tremove_selected_patient,\r\n\tdarken,\r\n\tadd_patient,\r\n\tadd_item,\r\n\tnavigate,\r\n\tmove_appointment,\r\n\tadd_appointment,\r\n\tset_appointments,\r\n\tadd_dropdown_item,\r\n\tstop_medicine,\r\n\tshow_patient_profile,\r\n\tsend_post_req,\r\n\tlogout\r\n} from \"./MainFunctions\";\r\n\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./Main/Home\";\r\nimport PatientsContainer from \"./Main/Patients\";\r\nimport Appointments from \"./Main/Appointments\";\r\n\r\nimport axios from \"axios\";\r\nimport ip_address from \"./Util/config\";\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = { username: null };\r\n\r\n\t\tthis.logout = logout.bind(this);\r\n\t\tthis.send_post_req = send_post_req.bind(this);\r\n\t\tthis.darken = darken.bind(this);\r\n\t\tthis.remove_selected_patient = remove_selected_patient.bind(this);\r\n\t\tthis.add_item = add_item.bind(this);\r\n\t\tthis.add_patient = add_patient.bind(this);\r\n\t\tthis.navigate = navigate.bind(this);\r\n\t\tthis.move_appointment = move_appointment.bind(this);\r\n\t\tthis.add_appointment = add_appointment.bind(this);\r\n\t\tthis.set_appointments = set_appointments.bind(this);\r\n\t\tthis.add_dropdown_item = add_dropdown_item.bind(this);\r\n\t\tthis.stop_medicine = stop_medicine.bind(this);\r\n\t\tthis.show_patient_profile = show_patient_profile.bind(this);\r\n\t}\r\n\r\n\tinit_app_state(data) {\r\n\t\tthis.setState({\r\n\t\t\tusername: data[0].username,\r\n\t\t\t_id: data[0]._id,\r\n\t\t\temail: data[0].email,\r\n\t\t\tpassword: data[0].password,\r\n\t\t\tlab_list: data[1],\r\n\t\t\tpatients: data[0].patients,\r\n\t\t\tselected_patient: [],\r\n\t\t\tevents: [],\r\n\t\t\tdiagnosis_list: data[0].diagnosis_list,\r\n\t\t\tmedicine_list: data[0].medicine_list,\r\n\t\t\tmedicine_dose_list: data[0].medicine_dose_list\r\n\t\t});\r\n\t\tsetTimeout(() => this.set_appointments(), 1000);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (window.location.pathname === \"/demo\") {\r\n\t\t\treturn axios\r\n\t\t\t\t.get(`/demo_data`)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tthis.init_app_state(res.data, \"demo\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn axios\r\n\t\t\t\t.request({\r\n\t\t\t\t\turl: `/data`,\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t\t\"Access-Control-Allow-Credentials\": \"true\"\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tthis.init_app_state(res.data, \"data\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"content\">\r\n\t\t\t\t<div className=\"darken\" />\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div id=\"route_container\">\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"route_tab\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-home\" aria-hidden=\"true\" />\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link to=\"/patients\" className=\"route_tab\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-user-md\" aria-hidden=\"true\" />\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link to=\"/appointments\" className=\"route_tab\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-calendar\" aria-hidden=\"true\" />\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<button onClick={() => this.logout()} id=\"logout\">\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<div id=\"logged_in_info\">user: {this.state.username || \"\"}</div>\r\n\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\tpath=\"/patients\"\r\n\t\t\t\t\t\t\t\trender={props => (\r\n\t\t\t\t\t\t\t\t\t<PatientsContainer\r\n\t\t\t\t\t\t\t\t\t\tlab_list={this.state.lab_list}\r\n\t\t\t\t\t\t\t\t\t\tstop_medicine={this.stop_medicine.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tshow_patient_profile={this.show_patient_profile.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tremove_selected_patient={this.remove_selected_patient.bind(\r\n\t\t\t\t\t\t\t\t\t\t\tthis\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\tadd_dropdown_item={this.add_dropdown_item.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tdiagnosis_list={this.state.diagnosis_list}\r\n\t\t\t\t\t\t\t\t\t\tmedicine_list={this.state.medicine_list}\r\n\t\t\t\t\t\t\t\t\t\tmedicine_dose_list={this.state.medicine_dose_list}\r\n\t\t\t\t\t\t\t\t\t\tpatients={this.state.patients}\r\n\t\t\t\t\t\t\t\t\t\tadd_patient={this.add_patient.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tadd_appointment={this.add_appointment.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tdarken={this.darken}\r\n\t\t\t\t\t\t\t\t\t\tadd_item={this.add_item.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tselected_patient={this.state.selected_patient}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\tpath=\"/appointments\"\r\n\t\t\t\t\t\t\t\trender={props => (\r\n\t\t\t\t\t\t\t\t\t<Appointments\r\n\t\t\t\t\t\t\t\t\t\tmove_appointment={this.move_appointment.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tnavigate={this.navigate.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tpatients={this.state.patients}\r\n\t\t\t\t\t\t\t\t\t\tadd_appointment={this.add_appointment.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tevents={this.state.events}\r\n\t\t\t\t\t\t\t\t\t\tdarken={this.darken.bind(this)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport BigCalendar from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport BookPanel from \"../Util/BookPanel\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { DragDropContext } from \"react-dnd\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\n\r\nBigCalendar.setLocalizer(BigCalendar.momentLocalizer(moment));\r\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\r\n\r\nclass Appointments extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tshow_book_panel: false,\r\n\t\t\tselected_slot: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"route_section\" id=\"appointments_route\">\r\n\t\t\t\t{this.state.show_book_panel ? (\r\n\t\t\t\t\t<BookPanel\r\n\t\t\t\t\t\thistory={this.props.history}\r\n\t\t\t\t\t\tselected_slot={this.state.selected_slot}\r\n\t\t\t\t\t\tclose_book_panel={this.close_book_panel.bind(this)}\r\n\t\t\t\t\t\tpatients={this.props.patients}\r\n\t\t\t\t\t\tadd_appointment={this.props.add_appointment}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<DragAndDropCalendar\r\n\t\t\t\t\tonEventDrop={this.moveEvent.bind(this)}\r\n\t\t\t\t\tselectable\r\n\t\t\t\t\tevents={this.props.events}\r\n\t\t\t\t\tstep={15}\r\n\t\t\t\t\ttimeslots={2}\r\n\t\t\t\t\tmin={this.get_min_time()}\r\n\t\t\t\t\tdefaultView=\"week\"\r\n\t\t\t\t\tonSelectEvent={event => this.navigate_to_patient(event)}\r\n\t\t\t\t\tonSelectSlot={slot_info => this.book_slot(slot_info)}\r\n\t\t\t\t\tformats={{\r\n\t\t\t\t\t\teventTimeRangeFormat: function() {\r\n\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tmoveEvent({ event, start, end }) {\r\n\t\tthis.props.move_appointment(event, start, end);\r\n\t}\r\n\r\n\tnavigate_to_patient(event) {\r\n\t\tthis.props.history.push(\"/patients\");\r\n\t\tthis.props.navigate(event.title);\r\n\t}\r\n\r\n\tbook_slot(slot_info) {\r\n\t\tthis.setState({\r\n\t\t\tshow_book_panel: true,\r\n\t\t\tselected_slot: slot_info\r\n\t\t});\r\n\t\tthis.props.darken();\r\n\t}\r\n\r\n\tclose_book_panel() {\r\n\t\tthis.props.darken();\r\n\t\tthis.setState({ show_book_panel: false });\r\n\t}\r\n\r\n\tget_min_time() {\r\n\t\tlet time = new Date();\r\n\r\n\t\ttime.setHours(7);\r\n\t\ttime.setMinutes(0);\r\n\t\ttime.setSeconds(0);\r\n\r\n\t\treturn time;\r\n\t}\r\n}\r\n\r\nexport default withRouter(Appointments);\r\n","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"route_section\" id=\"home_route\">\r\n                <h2>Demo Clinic Web System</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport PatientProfile from '../Patient/PatientProfile'\r\nimport PatientsList from '../Patient/PatientsList'\r\nimport AddPatientPanel from '../Patient/AddPatientPanel'\r\n\r\nexport default class PatientsContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            searched_patients: [],\r\n            no_match: false,\r\n            show_add_patient_panel: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let { searched_patients } = this.state,\r\n            { selected_patient, patients,\r\n                remove_selected_patient, add_appointment,\r\n                add_patient, add_item, darken,\r\n                diagnosis_list, add_dropdown_item } = this.props\r\n\r\n        return (\r\n            <div className=\"route_section\" id=\"patients_route\">\r\n\r\n                <button id=\"add_patient_btn\" onClick={() => this.show_add_patient_panel()}>\r\n                    <i className=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                {\r\n                    this.state.show_add_patient_panel\r\n                        ? <AddPatientPanel\r\n                            add_patient={add_patient}\r\n                            close_patient_panel={() => this.close_patient_panel()} />\r\n                        : \"\"\r\n                }\r\n\r\n                {\r\n                    selected_patient.length > 0\r\n                        ? <PatientProfile\r\n                            lab_list={this.props.lab_list}\r\n                            stop_medicine={this.props.stop_medicine}\r\n                            medicine_dose_list={this.props.medicine_dose_list}\r\n                            add_dropdown_item={add_dropdown_item}\r\n                            diagnosis_list={diagnosis_list}\r\n                            medicine_list={this.props.medicine_list}\r\n                            patient={selected_patient}\r\n                            remove_selected_patient={remove_selected_patient}\r\n                            add_appointment={add_appointment}\r\n                            add_item={add_item}\r\n                            darken={darken} />\r\n\r\n                        : <PatientsList\r\n                            patients={patients}\r\n                            searched_patients={searched_patients}\r\n                            render_patients={this.render_patients.bind(this)}\r\n                            search_patient={this.search_patient.bind(this)}\r\n                        />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    close_patient_panel() {\r\n        this.setState({ show_add_patient_panel: false })\r\n        this.props.darken()\r\n    }\r\n\r\n    show_add_patient_panel() {\r\n        this.setState({ show_add_patient_panel: true })\r\n        this.props.darken()\r\n    }\r\n\r\n    search_patient(e) {\r\n        let value = e.target.value,\r\n            searched_patients = []\r\n\r\n        if (value === \"\") {\r\n            return this.setState({\r\n                searched_patients: [],\r\n                no_match: false\r\n            })\r\n        }\r\n\r\n        if (value.length > 0) {\r\n\r\n            for (let i = 0; i < this.props.patients.length; i++) {\r\n                let patient = this.props.patients[i],\r\n                    patient_name = patient.name.toLowerCase();\r\n\r\n                if (patient_name.startsWith(value)) {\r\n                    searched_patients.push(patient)\r\n                }\r\n            }\r\n\r\n            if (searched_patients.length === 0) {\r\n                return this.setState({ no_match: true })\r\n            }\r\n        }\r\n\r\n        return this.setState({\r\n            no_match: false,\r\n            searched_patients: searched_patients\r\n        })\r\n    }\r\n\r\n    render_patients(patients) {\r\n        if (this.state.no_match === true) {\r\n            return\r\n        }\r\n\r\n        return <div className=\"patients_list\">\r\n            {patients.map((patient, x) =>\r\n                <div key={x} className=\"patient\" onClick={() => this.props.show_patient_profile(patient)}>\r\n                    <span>{patient.name}</span>\r\n                    <span>{patient.birth}</span>\r\n                    <span>{patient.age}</span>\r\n                    <span>{patient.gender}</span>\r\n                    <span>{patient.address}</span>\r\n                    <span>{patient.phone}</span>\r\n                </div>)}\r\n        </div>\r\n    }\r\n}\r\n","import axios from 'axios'\r\nimport ip_address from './Util/config'\r\n\r\nexport {\r\n    remove_selected_patient,\r\n    darken,\r\n    add_patient,\r\n    add_item,\r\n    navigate,\r\n    move_appointment,\r\n    add_appointment,\r\n    set_appointments,\r\n    add_dropdown_item,\r\n    stop_medicine,\r\n    show_patient_profile,\r\n    send_post_req,\r\n    logout\r\n}\r\n\r\nfunction send_post_req() {\r\n    if (this.state.username) {\r\n        axios.post(`/insert`,\r\n            {\r\n                withCredentials: true,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"http://ec2-34-212-25-151.us-west-2.compute.amazonaws.com:3000\",\r\n                    \"Access-Control-Allow-Credentials\": \"true\"\r\n                }\r\n            }, { data: this.state }\r\n        ).then((res) => { console.log(\"data inserted\"); })\r\n            .catch(function (error) { console.log(error); });\r\n    }\r\n}\r\n\r\nfunction logout() {\r\n    if (this.state.username) {\r\n        axios.get(`/logout`,\r\n            {\r\n                withCredentials: true,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"http://ec2-34-212-25-151.us-west-2.compute.amazonaws.com:3000\",\r\n                    \"Access-Control-Allow-Credentials\": \"true\"\r\n                }\r\n            }\r\n        ).then((res) => { window.location = \"/\" })\r\n            .catch(function (error) { console.log(error); });\r\n    }\r\n}\r\n\r\nfunction remove_selected_patient() {\r\n    this.setState({ selected_patient: [] });\r\n}\r\n\r\nfunction darken() {\r\n    let darken_div = document.querySelector(\".darken\")\r\n    darken_div.classList.toggle(\"darken_show\");\r\n}\r\n\r\nfunction add_patient(patient) {\r\n    if (patient.name &&\r\n        patient.date &&\r\n        patient.gender &&\r\n        patient.address) {\r\n\r\n        let updated_patients = this.state.patients.slice(),\r\n            birth = patient.date.split(\"-\"),\r\n            reversed_birth = birth.reverse().join(\"-\"),\r\n            date1 = new Date(),\r\n            date2 = new Date(patient.date),\r\n            time_diff = Math.abs(date2.getTime() - date1.getTime()),\r\n            diff_years = Math.ceil((time_diff / (1000 * 3600 * 24) / 365)),\r\n            new_patient = {\r\n                name: patient.name,\r\n                birth: reversed_birth,\r\n                gender: patient.gender,\r\n                id: Math.floor(Math.random() * (999999 - 100000)) + 100000,\r\n                age: diff_years,\r\n                gravida: patient.gravida,\r\n                hypertension: patient.hypertension,\r\n                diabetes: patient.diabetes,\r\n                phone: patient.phone,\r\n                smoker: patient.smoker,\r\n                address: patient.address,\r\n                notes: [],\r\n                lab: [],\r\n                appointments: [],\r\n                vitals: [],\r\n                \"medicine\": [],\r\n                \"diagnosis\": []\r\n            }\r\n\r\n        updated_patients.unshift(new_patient)\r\n\r\n        this.setState({ patients: updated_patients });\r\n        setTimeout(() => this.send_post_req(), 2000)\r\n    }\r\n}\r\n\r\nfunction add_item(item, patient, property) {\r\n    let patients = this.state.patients.slice()\r\n\r\n    for (let i = 0; i < patients.length; i++) {\r\n        if (patients[i].name === patient.name) {\r\n            patients[i][property].unshift(item);\r\n        }\r\n    }\r\n\r\n    this.setState({ patients: patients });\r\n\r\n    setTimeout(() => this.send_post_req(), 2000)\r\n\r\n}\r\n\r\nfunction navigate(patient) {\r\n    let selected_patient,\r\n        patients = this.state.patients;\r\n\r\n    for (let i = 0; i < patients.length; i++) {\r\n        if (patients[i].name === patient) {\r\n            selected_patient = patients[i];\r\n        }\r\n    }\r\n\r\n    this.setState({ selected_patient: [selected_patient] });\r\n}\r\n\r\nfunction move_appointment(event, start, end) {\r\n    let patients = this.state.patients.slice(),\r\n        appointments = [],\r\n        patient_index,\r\n        appointment_index,\r\n        appointment = {\r\n            \"title\": event.title,\r\n            \"start\": start,\r\n            \"end\": end,\r\n            \"desc\": event.desc\r\n        };\r\n\r\n    for (let i = 0; i < patients.length; i++) {\r\n        if (patients[i].name === event.title) {\r\n\r\n            for (let j = 0; j < patients[i].appointments.length; j++) {\r\n                if (patients[i].appointments[j].start === event.start) {\r\n\r\n                    patient_index = i;\r\n                    appointment_index = j;\r\n                    patients[i].appointments.push(appointment);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    if (typeof (patient_index) === \"number\") {\r\n        patients[patient_index].appointments.splice(appointment_index, 1)\r\n    }\r\n\r\n    patients.map((patient) => {\r\n        patient.appointments.map((apt) => {\r\n            appointments.push(apt)\r\n        })\r\n    })\r\n\r\n    this.setState({\r\n        patients: patients,\r\n        events: appointments\r\n    })\r\n\r\n    setTimeout(() => this.send_post_req(), 2000)\r\n\r\n}\r\n\r\nfunction add_appointment(appointment, patient) {\r\n    let patients = this.state.patients.slice(),\r\n        selected_patient,\r\n        appointments = [];\r\n\r\n    for (let i = 0; i < patients.length; i++) {\r\n        if (patients[i].name === patient) {\r\n            selected_patient = patients[i];\r\n            patients[i].appointments.unshift(appointment);\r\n        }\r\n    }\r\n\r\n    this.state.patients.map((patient) => {\r\n        patient.appointments.map((apt) => {\r\n            appointments.push(apt)\r\n        })\r\n    })\r\n\r\n\r\n    this.setState({\r\n        patients: patients,\r\n        events: appointments,\r\n        selected_patient: [selected_patient]\r\n    })\r\n\r\n    setTimeout(() => this.send_post_req(), 2000)\r\n\r\n}\r\n\r\nfunction set_appointments() {\r\n    let appointments = []\r\n\r\n    this.state.patients.map((patient) => {\r\n        patient.appointments.map((apt) => {\r\n            appointments.push({\r\n                title: apt.title,\r\n                start: new Date(apt.start),\r\n                end: new Date(apt.end)\r\n            })\r\n        })\r\n    })\r\n\r\n    this.setState({ events: appointments })\r\n\r\n    setTimeout(() => this.send_post_req(), 1000)\r\n\r\n}\r\n\r\nfunction add_dropdown_item(item, category) {\r\n    let new_items = this.state[category].slice()\r\n    new_items.push(item)\r\n\r\n    if (category === \"diagnosis_list\") {\r\n        this.setState({ diagnosis_list: new_items })\r\n    }\r\n    if (category === \"medicine_list\") {\r\n        this.setState({ medicine_list: new_items })\r\n    }\r\n\r\n    if (category === \"medicine_dose_list\") {\r\n        this.setState({ medicine_dose_list: new_items })\r\n    }\r\n\r\n    setTimeout(() => this.send_post_req(), 2000)\r\n\r\n}\r\n\r\nfunction stop_medicine(patient, medicine) {\r\n    let patients = this.state.patients.slice()\r\n\r\n    for (let i = 0; i < patients.length; i++) {\r\n        if (patients[i].name === patient.name) {\r\n\r\n            for (let j = 0; j < patients[i].medicine.length; j++) {\r\n                if (patients[i].medicine[j] === medicine) {\r\n                    patients[i].medicine[j][\"stopped\"] = \"stopped\"\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    this.setState({ patients: patients })\r\n\r\n    setTimeout(() => this.send_post_req(), 2000)\r\n\r\n}\r\n\r\nfunction show_patient_profile(patient) {\r\n    this.setState({ selected_patient: [patient] })\r\n}\r\n\r\nfunction remove_selected_patient() {\r\n    this.setState({ selected_patient: [] })\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass AddPatientPanel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            gender: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"add_patient_container\">\r\n                <button id=\"close_patient_panel_btn\" onClick={this.props.close_patient_panel}>\r\n                    <i className=\"fa fa-window-close-o\" aria-hidden=\"true\"></i>  </button>\r\n\r\n                <div id=\"add_patient_fields\">\r\n                    <input type=\"text\" placeholder=\"patient_name\" name=\"patient_name\" />\r\n                    <input type=\"date\" placeholder=\"patient_birth_date\" defaultValue=\"1990-01-01\" name=\"patient_birth_date\" />\r\n\r\n                    <select onChange={(e) => this.setState({\r\n                        gender: e.target.value.toLowerCase()\r\n                    })}\r\n                        name=\"patient_gender\">\r\n\r\n                        <option>Male</option>\r\n                        <option>Female</option>\r\n                    </select>\r\n\r\n                    <div id=\"label\">\r\n                        <label htmlFor=\"patient_smoker\">Smoker</label>\r\n                        <input type=\"checkbox\" name=\"patient_smoker\" id=\"patient_smoker\" />\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.gender === \"female\"\r\n                            ? <div id=\"label\">\r\n                                <label htmlFor=\"patient_gravida\">Gravida</label>\r\n                                <input type=\"checkbox\" name=\"patient_gravida\" id=\"patient_gravida\" />\r\n                            </div>\r\n                            : \"\"\r\n                    }\r\n\r\n                    <input type=\"text\" placeholder=\"address\" name=\"patient_address\" />\r\n                    <input type=\"number\" placeholder=\"phone\" name=\"patient_phone\" />\r\n\r\n                    <button id=\"submit_new_patient\" onClick={() => this.add_patient()}>add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    add_patient() {\r\n        let gender = document.querySelector(\"select[name=patient_gender]\").value;\r\n\r\n        let patient_details = {\r\n            name: document.querySelector(\"input[name=patient_name]\").value,\r\n            date: document.querySelector(\"input[name=patient_birth_date]\").value,\r\n            gender: gender,\r\n            address: document.querySelector(\"input[name=patient_address]\").value,\r\n            phone: document.querySelector(\"input[name=patient_phone]\").value,\r\n            gravida: gender === \"female\" ? document.querySelector(\"input[name=patient_gravida]\").value : \"\",\r\n            smoker: document.querySelector(\"input[name=patient_smoker]\").value\r\n        }\r\n\r\n        this.props.add_patient(patient_details)\r\n        this.props.close_patient_panel()\r\n    }\r\n}\r\n\r\nexport default AddPatientPanel;","import React, { Component } from 'react';\r\nimport moment from 'moment'\r\n\r\nimport Vitals from './Profile/Vitals'\r\nimport Appointments from './Profile/Appointments'\r\nimport Notes from './Profile/Notes'\r\nimport Info from './Profile/Info'\r\nimport Lab from './Profile/Lab'\r\nimport Medicine from './Profile/Medicine'\r\n\r\nexport default class PatientsList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            active_tab: \"notes\",\r\n            selected_diagnosis_option: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            selected_diagnosis_option: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"patients_profile_route\" className=\"route_section\">\r\n                <div id=\"patient_tabs_container\">\r\n\r\n                    <div id=\"selected_patient_container\">\r\n                        <strong>\r\n                            ID:{this.props.patient[0].id}\r\n                            &emsp;&emsp;\r\n                            {this.props.patient[0].name}\r\n                            &emsp;&emsp;\r\n                            {this.props.patient[0].age} y.o\r\n                        </strong>\r\n                    </div>\r\n\r\n                    <a className=\"patient_tab\" onClick={(e) => this.set_active_tab(\"info\", e.target)}>Info</a>\r\n                    <a className=\"patient_tab\" onClick={(e) => this.set_active_tab(\"notes\", e.target)}>Notes</a>\r\n                    <a className=\"patient_tab\" onClick={(e) => this.set_active_tab(\"vitals\", e.target)}>Vitals</a>\r\n                    <a className=\"patient_tab\" onClick={(e) => this.set_active_tab(\"lab\", e.target)}>Lab</a>\r\n                    <a className=\"patient_tab\" onClick={(e) => this.set_active_tab(\"medicine\", e.target)}>Medicine</a>\r\n                    <a className=\"patient_tab\" onClick={(e) => this.set_active_tab(\"appointments\", e.target)}>Appointments</a>\r\n                    <a className=\"patient_tab\" id=\"close_patient_tab\" onClick={(e) => this.remove_selected_patient()}>\r\n                        <i className=\"fa fa-window-close-o\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                </div>\r\n                {this.show_route(this.props)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    remove_selected_patient() { this.props.remove_selected_patient() }\r\n\r\n    set_selected_diagnosis_option(option) {\r\n        this.setState({ selected_diagnosis_option: option })\r\n    }\r\n\r\n    show_route(props) {\r\n        if (this.state.active_tab === \"notes\") {\r\n            return <Notes\r\n                patient={props.patient[0]}\r\n                add_note={props.add_item}\r\n                darken={props.darken} />\r\n        }\r\n\r\n        if (this.state.active_tab === \"vitals\") {\r\n            return <Vitals\r\n                patient={props.patient[0]}\r\n                add_vitals={props.add_item} />\r\n        }\r\n\r\n        if (this.state.active_tab === \"lab\") {\r\n            return <Lab\r\n                add_lab_item={this.props.add_item}\r\n                lab_list={this.props.lab_list}\r\n                darken={props.darken}\r\n                patient={props.patient[0]} />\r\n        }\r\n\r\n        if (this.state.active_tab === \"info\") {\r\n            return <Info\r\n                patient={props.patient[0]}\r\n                create_diagnosis={this.create_diagnosis.bind(this)}\r\n                selected_option={this.state.selected_diagnosis_option}\r\n                set_selected_option={this.set_selected_diagnosis_option.bind(this)}\r\n                add_dropdown_item={this.props.add_dropdown_item}\r\n                diagnosis_list={props.diagnosis_list} />\r\n        }\r\n\r\n        if (this.state.active_tab === \"appointments\") {\r\n            return <Appointments\r\n                patient={props.patient[0]}\r\n                add_appointment={props.add_appointment} />\r\n        }\r\n\r\n        if (this.state.active_tab === \"medicine\") {\r\n            return <Medicine\r\n                stop_medicine={this.props.stop_medicine}\r\n                create_diagnosis={this.create_diagnosis.bind(this)}\r\n                selected_option={this.state.selected_diagnosis_option}\r\n                set_selected_option={this.set_selected_diagnosis_option.bind(this)}\r\n                medicine_dose_list={this.props.medicine_dose_list}\r\n                add_dropdown_item={this.props.add_dropdown_item}\r\n                medicine_list={this.props.medicine_list}\r\n                diagnosis_list={props.diagnosis_list}\r\n                patient={props.patient[0]}\r\n                add_medicine={props.add_item} />\r\n        }\r\n    }\r\n\r\n    set_active_tab(tab, el) {\r\n        let tabs = document.querySelectorAll(\".patient_tab\")\r\n\r\n        Array.prototype.map.call(tabs, (tab) => {\r\n            tab.className = \"patient_tab\"\r\n        })\r\n\r\n        el.className = \"patient_tab active_patient_tab\"\r\n\r\n        this.setState({ active_tab: tab })\r\n    }\r\n\r\n    create_diagnosis() {\r\n        let treatment = document.querySelector(\"#create_diagnosis_treatment\")\r\n\r\n        if (treatment && this.state.selected_diagnosis_option) {\r\n            let diagnosis_bj = {\r\n                \"date\": moment().format(\"MMM Do YYYY\"),\r\n                \"diagnosis\": this.state.selected_diagnosis_option,\r\n                \"treatment\": treatment.value\r\n            }\r\n\r\n            treatment.value = \"\"\r\n            this.setState({ selected_diagnosis_option: \"\" })\r\n            this.props.add_item(diagnosis_bj, this.props.patient[0], \"diagnosis\")\r\n\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass PatientsList extends Component {\r\n    render() {\r\n        const { searched_patients, patients, render_patients, search_patient } = this.props\r\n        return (\r\n            <div id=\"patients_container\">\r\n                <input type=\"text\"\r\n                    placeholder=\"search patient...\"\r\n                    id=\"search_patient_input\"\r\n                    onChange={(e) => search_patient(e)} />\r\n\r\n                <h3>Name</h3>\r\n                <h3>Birth</h3>\r\n                <h3>Age</h3>\r\n                <h3>Gender</h3>\r\n                <h3>Address</h3>\r\n                <h3>Phone</h3>\r\n                {searched_patients.length > 0\r\n                    ? render_patients(searched_patients)\r\n                    : render_patients(patients)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PatientsList;","import React, { Component } from 'react';\r\nimport AddLabModule from './AddLabModule';\r\nimport moment from 'moment';\r\n\r\nclass AddLabDetailsPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"add_lab_details_panel_container\">\r\n                <button onClick={() => this.props.toggle_add_lab_panel()} id=\"add_lab_details_panel_close_btn\">X</button>\r\n\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n                <AddLabModule lab_list={this.props.lab_list}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category=\"lab\" />\r\n\r\n                <button id=\"create_lab_btn\" onClick={() => this.construct_lab_details()}>Create</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    construct_lab_details() {\r\n        let lab_results = document.querySelectorAll('input[name=\"lab_result_input\"]'),\r\n            lab_names = document.querySelectorAll(\"#search_item_input\"),\r\n            tests = [];\r\n\r\n        for (let i = 0; i < lab_names.length; i++) {\r\n            if (lab_results[i].value && lab_names[i].value) {\r\n                tests.push({\r\n                    \"name\": lab_names[i].value.trim(),\r\n                    \"result\": lab_results[i].value\r\n                })\r\n            }\r\n        }\r\n\r\n        let lab_obj = {\r\n            \"date\": moment().format(\"YYYY-MM-DD\"), // h:mm:ss a for later\r\n            \"tests\": tests\r\n        }\r\n        return this.props.construct_lab(lab_obj);\r\n    }\r\n}\r\n\r\nexport default AddLabDetailsPanel;","import React, { Component } from 'react';\r\nimport Searchable from '../../Util/Searchable';\r\n\r\nclass AddLabModule extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"lab_dropdown_container\">\r\n                    <Searchable\r\n                        options_list={this.props.lab_list}\r\n                        set_selected_option={this.props.set_selected_option}\r\n                        category=\"lab\" />\r\n                </div>\r\n\r\n                <input type=\"text\" name=\"lab_result_input\" placeholder=\"result\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddLabModule;","import React, { Component } from 'react';\r\nimport moment from 'moment'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\n\r\n\r\nconst EditorComponent = () => <Editor />\r\n\r\nclass AddNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorState: EditorState.createEmpty()\r\n        };\r\n    }\r\n\r\n    onEditorStateChange(editorState) {\r\n        this.setState({ editorState });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"create_note_container\">\r\n                <div id=\"close_create_note_panel\">\r\n                    <button onClick={this.props.close_create_notes_panel} id=\"close_create_note_btn\">X</button>\r\n                </div>\r\n                <select name=\"create_note_title\">\r\n                    <option>title</option>\r\n                    <option>primary Journal</option>\r\n                    <option>out-patient</option>\r\n                    <option>in-patient</option>\r\n                    <option>discharged summary</option>\r\n                    <option>treatment plan</option>\r\n                </select>\r\n\r\n                <Editor\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={(val) => this.onEditorStateChange(val)} />\r\n\r\n                <button id=\"create_note_btn\" onClick={() => this.construct_note()}>Create</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    construct_note() {\r\n        let title = document.querySelector(\"select[name=create_note_title]\"),\r\n            contentState = convertToRaw(this.state.editorState.getCurrentContent()),\r\n            markup = draftToHtml(contentState);\r\n\r\n        if (!title.value.match(/^\\s*$/)) {\r\n\r\n            let note = {\r\n                date: moment().format(\"MM-DD-YYYY\"),\r\n                title: title.value,\r\n                content: markup\r\n            }\r\n\r\n            title.value = \"\"\r\n            this.setState({ editorState: EditorState.createEmpty() })\r\n            this.props.add_note(note, this.props.patient, \"notes\")\r\n            this.props.close_create_notes_panel()\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default AddNote;\r\n\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment'\r\nimport DateTime from 'react-datetime'\r\n\r\nclass Appointments extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            start_date: null,\r\n            end_date: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"patient_profile_route\">\r\n                <div className=\"patient_appointments_container\">\r\n                    <div className=\"patient_upcoming_apt\">\r\n                        <h3>Upcoming</h3>\r\n                        {this.props.patient.appointments.map((apt, x) =>\r\n                            this.render_date(apt, \"upcoming\", x)\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"patient_past_apt\">\r\n                        <h3>Past</h3>\r\n                        {this.props.patient.appointments.map((apt, x) =>\r\n                            this.render_date(apt, \"past\", x)\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"add_appointment_sidebar\">\r\n                        <DateTime\r\n                            inputProps={{ placeholder: \"start\" }}\r\n                            value={this.state.start_date}\r\n                            onChange={(val) => this.set_date(val, \"start\")} />\r\n\r\n                        <DateTime\r\n                            inputProps={{ placeholder: \"end\" }}\r\n                            value={this.state.end_date}\r\n                            onChange={(val) => this.set_date(val, \"end\")} />\r\n\r\n                        <textarea id=\"add_appointment_patient_profile_description\">\r\n                        </textarea>\r\n\r\n                        <button onClick={() => this.add_appointment()}>Create Appointment</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    set_date(val, type) {\r\n        if (type === \"start\") {\r\n            this.setState({ start_date: val._d })\r\n        }\r\n\r\n        if (type === \"end\") {\r\n            this.setState({ end_date: val._d })\r\n        }\r\n    }\r\n\r\n    render_date(date, condition, key) {\r\n        let current_date = moment().format(\"MM-DD-YYYY, h:mm a\"),\r\n            end_date = moment(date.end).format(\"MM-DD-YYYY, h:mm a\"),\r\n            start_date = moment(date.start).format(\"MM-DD-YYYY, h:mm a\")\r\n\r\n        if (condition === \"upcoming\" && end_date >= current_date) {\r\n            return <div key={key} className=\"apt_div\">\r\n                <p><span id=\"span_date_title\">Start:</span> {start_date}</p>\r\n                <p><span id=\"span_date_title\">End:</span> {end_date}</p>\r\n            </div>\r\n        }\r\n\r\n        if (condition === \"past\" && end_date < current_date) {\r\n            return <div key={key} className=\"apt_div\">\r\n                <p><span id=\"span_date_title\">Start:</span> {start_date}</p>\r\n                <p><span id=\"span_date_title\">End:</span> {end_date}</p>\r\n            </div>\r\n\r\n        }\r\n    }\r\n\r\n    add_appointment() {\r\n        let description = document.querySelector(\"#add_appointment_patient_profile_description\"),\r\n            patient = this.props.patient.name,\r\n            start_date = new Date(this.state.start_date),\r\n            end_date = new Date(this.state.end_date),\r\n\r\n            appointment = {\r\n                date: moment().format(\"MM-DD-YYYY, h:mm\"),\r\n                title: patient,\r\n                desc: description.value,\r\n                start: start_date,\r\n                end: end_date\r\n            }\r\n\r\n        this.props.add_appointment(appointment, patient, \"appointment\")\r\n\r\n        description.value = \"\"\r\n\r\n        this.setState({\r\n            start_date: null,\r\n            end_date: null\r\n        })\r\n    }\r\n}\r\n\r\nexport default Appointments;","import React, { Component } from 'react';\r\nimport DropDown from '../../Util/DropDown';\r\n\r\nclass Diagnosis extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"diagnosis_container\">\r\n                <button id=\"btn_add_diagnosis\"\r\n                    onClick={(e) => this.props.create_diagnosis(e)}>\r\n                    Create Diagnosis\r\n            </button>\r\n\r\n                <div id=\"dropdown_diagnosis_container\">\r\n                    <DropDown\r\n                        selected_option={this.props.selected_option}\r\n                        set_selected_option={this.props.set_selected_option}\r\n                        category_list={this.props.category_list}\r\n                        add_dropdown_item={this.props.add_dropdown_item}\r\n                        items={this.props.items}\r\n                        category={this.props.category}\r\n                    />\r\n                </div>\r\n\r\n                <textarea id=\"create_diagnosis_treatment\" placeholder=\"treatment\"></textarea>\r\n                {this.render_diagnosis()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render_diagnosis() {\r\n        return <div id=\"diagnosis_list_container\">\r\n            {this.props.patient.diagnosis.map((diagnosis, x) =>\r\n                <div key={x} id=\"diagnosis\">\r\n                    <h4>{diagnosis.date.match(/\\d+$/)[0]}</h4>\r\n                    <h4>{diagnosis.diagnosis}</h4>\r\n                    <h4>{diagnosis.treatment}</h4>\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Diagnosis;","import React, { Component } from 'react';\r\nimport Diagnosis from './Diagnosis'\r\n\r\nclass Info extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"patient_profile_route\">\r\n                <div id=\"patients_info_container\">\r\n                    <p> <u>ID:</u> {this.props.patient.id}</p>\r\n                    <p> <u>Name:</u> {this.props.patient.name}</p>\r\n                    <p> <u>Birth:</u> {this.props.patient.birth}</p>\r\n                    <p> <u>Age:</u> {this.props.patient.age}</p>\r\n                    <p> <u>Gender:</u> {this.props.patient.gender}</p>\r\n                    <p> <u>Gravida:</u> {this.props.patient.gravida}</p>\r\n                    <p> <u>Smoker:</u> {this.props.patient.smoker} years</p>\r\n                    <p> <u>Address:</u> {this.props.patient.address}</p>\r\n                    <p> <u>Phone:</u> {this.props.patient.phone}</p>\r\n                </div>\r\n\r\n                <Diagnosis\r\n                    create_diagnosis={this.props.create_diagnosis}\r\n                    patient={this.props.patient}\r\n                    selected_option={this.props.selected_option}\r\n                    set_selected_option={this.props.set_selected_option}\r\n                    category_list=\"diagnosis_list\"\r\n                    add_dropdown_item={this.props.add_dropdown_item}\r\n                    items={this.props.diagnosis_list}\r\n                    category=\"diagnosis\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info;","import React, { Component } from 'react';\r\nimport AddLabDetailsPanel from './AddLabDetailsPanel'\r\n\r\nclass Lab extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lab_analysis_list: [],\r\n            lab_details: [],\r\n            add_lab_details_panel: false,\r\n            selected_options: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.construct_lab_list()\r\n        this.construct_lab_details()\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.construct_lab_list()\r\n        this.construct_lab_details()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"patient_profile_route\">\r\n                <div id=\"lab_container\">\r\n                    <div id=\"lab_analysis_container\">\r\n                        <div id=\"lab_analysis_list_container\">\r\n                            <strong>Lab analysis list</strong>\r\n                            {this.render_lab_analysis_list()}\r\n                        </div>\r\n\r\n                        <div id=\"lab_analysis_unit_container\">\r\n                            <strong>Unit</strong>\r\n                            {this.render_lab_unit_list()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"patient_lab_details_container\">\r\n                        {this.render_columns()}\r\n                    </div>\r\n\r\n                    <button id=\"add_lab_details_btn\" onClick={() => this.toggle_add_lab_panel()}>\r\n                        <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n\r\n                    {\r\n                        this.state.add_lab_details_panel\r\n                            ? <AddLabDetailsPanel\r\n                                construct_lab={this.construct_lab.bind(this)}\r\n                                set_selected_option={this.set_selected_option.bind(this)}\r\n                                lab_list={this.props.lab_list}\r\n                                toggle_add_lab_panel={this.toggle_add_lab_panel.bind(this)} />\r\n                            : \"\"\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    construct_lab(lab_obj) {\r\n        this.setState({ selected_options: [] })\r\n        this.props.add_lab_item(lab_obj, this.props.patient, \"lab\")\r\n\r\n        return this.toggle_add_lab_panel()\r\n    }\r\n\r\n    set_selected_option(option) {\r\n        let new_selected_options = this.state.selected_options\r\n        new_selected_options.push(option)\r\n\r\n        this.setState({ selected_options: new_selected_options })\r\n    }\r\n\r\n    toggle_add_lab_panel() {\r\n        this.state.add_lab_details_panel\r\n            ? this.setState({ add_lab_details_panel: false })\r\n            : this.setState({ add_lab_details_panel: true })\r\n\r\n        this.props.darken()\r\n    }\r\n\r\n    render_lab_unit_list() {\r\n        <div id=\"lab_analysis_unit_container\"> </div>\r\n    }\r\n\r\n    render_lab_analysis_list() {\r\n        return <div id=\"lab_analysis_div_container\">\r\n            {this.state.lab_analysis_list.map((item, x) =>\r\n                <div id=\"lab_analysis_div\" key={x}>{item}</div>)}\r\n        </div>\r\n    }\r\n\r\n    render_columns() {\r\n        return <div id=\"patient_lab_columns_container\">\r\n            {this.state.lab_details.map((lab, x) =>\r\n                <div key={x} id=\"patient_lab_column\">\r\n                    <strong>{lab.date}</strong>\r\n                    {\r\n                        this.state.lab_analysis_list.map((lab_analysis_item, z) =>\r\n                            this.render_lab_analysis_div(lab, lab_analysis_item, z)\r\n                        )\r\n                    }\r\n                </div>)}\r\n        </div>\r\n    }\r\n\r\n    render_lab_analysis_div(lab, lab_analysis_item, key) {\r\n        let filtered_tests = lab.tests.filter((test) => { return test.name === lab_analysis_item })\r\n\r\n        return filtered_tests.length > 0\r\n            ? <div key={key} id=\"lab_test_exists\">{filtered_tests[0][\"result\"]}</div>\r\n            : <div key={key} id=\"lab_test_not_exists\"></div>\r\n    }\r\n\r\n    construct_lab_list() {\r\n        let lab_analysis_list = this.state.lab_analysis_list.slice()\r\n\r\n        this.props.patient.lab.map((lab, x) =>\r\n            lab.tests.map((test, z) =>\r\n                lab_analysis_list.indexOf(test.name) === -1\r\n                    ? lab_analysis_list.push(test.name)\r\n                    : null\r\n            )\r\n        )\r\n\r\n        lab_analysis_list = lab_analysis_list.sort((a, b) => {\r\n            return a > b ? 1 : a < b ? -1 : 0\r\n        })\r\n\r\n        return this.setState({ lab_analysis_list: lab_analysis_list })\r\n    }\r\n\r\n    construct_lab_details() {\r\n        this.setState({\r\n            lab_details: this.props.patient.lab.sort(function (a, b) {\r\n                return a[\"date\"] < b[\"date\"] ? 1 : a[\"date\"] > b[\"date\"] ? -1 : 0;\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default Lab;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport DropDown from \"../../Util/DropDown\";\r\nimport Searchable from \"../../Util/Searchable\";\r\nimport Diagnosis from \"./Diagnosis\";\r\nimport Pikaday from \"react-pikaday\";\r\n\r\nclass Medicine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselected_medicine_option: \"\",\r\n\t\t\tselected_medicine_dose_option: \"\",\r\n\t\t\tstart_date: null,\r\n\t\t\tend_date: null\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"patient_profile_route\">\r\n\t\t\t\t<div id=\"medicine_container\">\r\n\t\t\t\t\t<div id=\"create_medicine_container\">\r\n\t\t\t\t\t\t<div id=\"parent_medicine_dropdown_container\">\r\n\t\t\t\t\t\t\t<div id=\"medicine_dropdown_container\">\r\n\t\t\t\t\t\t\t\t<Searchable\r\n\t\t\t\t\t\t\t\t\toptions_list={this.props.medicine_list}\r\n\t\t\t\t\t\t\t\t\tset_selected_option={this.set_selected_medicine_option.bind(\r\n\t\t\t\t\t\t\t\t\t\tthis\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tcategory=\"medicine\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div id=\"parent_medicine_dose_dropdown_container\">\r\n\t\t\t\t\t\t\t<div id=\"medicine_dose_dropdown_container\">\r\n\t\t\t\t\t\t\t\t<DropDown\r\n\t\t\t\t\t\t\t\t\tselected_option={this.state.selected_medicine_dose_option}\r\n\t\t\t\t\t\t\t\t\tset_selected_option={this.set_selected_medicine_dose_option.bind(\r\n\t\t\t\t\t\t\t\t\t\tthis\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tcategory_list=\"medicine_dose_list\"\r\n\t\t\t\t\t\t\t\t\tadd_dropdown_item={this.props.add_dropdown_item}\r\n\t\t\t\t\t\t\t\t\titems={this.props.medicine_dose_list}\r\n\t\t\t\t\t\t\t\t\tcategory=\"dose\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Pikaday\r\n\t\t\t\t\t\t\tplaceholder=\"start\"\r\n\t\t\t\t\t\t\tonChange={date =>\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tstart_date: date.toDateString()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Pikaday\r\n\t\t\t\t\t\t\tplaceholder=\"end\"\r\n\t\t\t\t\t\t\tonChange={date =>\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tend_date: date.toDateString()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<button onClick={() => this.create_medicine()}>Create</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id=\"active_medicine_container\">\r\n\t\t\t\t\t\t<u>Current Medicine</u>\r\n\t\t\t\t\t\t{this.render_active_medicine()}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id=\"inactive_medicine_container\">\r\n\t\t\t\t\t\t<u>Past Medicine</u>\r\n\t\t\t\t\t\t{this.render_inactive_medicine()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Diagnosis\r\n\t\t\t\t\tcreate_diagnosis={this.props.create_diagnosis}\r\n\t\t\t\t\tpatient={this.props.patient}\r\n\t\t\t\t\tselected_option={this.props.selected_option}\r\n\t\t\t\t\tset_selected_option={this.props.set_selected_option}\r\n\t\t\t\t\tcategory_list=\"diagnosis_list\"\r\n\t\t\t\t\tadd_dropdown_item={this.props.add_dropdown_item}\r\n\t\t\t\t\titems={this.props.diagnosis_list}\r\n\t\t\t\t\tcategory=\"diagnosis\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tstop_medicine(medicine) {\r\n\t\tthis.props.stop_medicine(this.props.patient, medicine);\r\n\t}\r\n\r\n\trender_active_medicine() {\r\n\t\treturn (\r\n\t\t\t<div id=\"medicine_list_container\">\r\n\t\t\t\t{this.props.patient.medicine.map(\r\n\t\t\t\t\t(medicine, x) =>\r\n\t\t\t\t\t\tmoment(medicine.end) > moment() && !medicine.stopped ? (\r\n\t\t\t\t\t\t\t<div key={x} id=\"medicine\">\r\n\t\t\t\t\t\t\t\t<h4>{moment(medicine.start).format(\"MM-DD-YYYY\")}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{moment(medicine.end).format(\"MM-DD-YYYY\")}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{medicine.name.match(/(\\w+)/)[0]}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{medicine.strength}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{medicine.dose}</h4>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tid=\"stop_medicine\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.stop_medicine(medicine)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tstop\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\trender_inactive_medicine() {\r\n\t\treturn (\r\n\t\t\t<div id=\"medicine_list_container\">\r\n\t\t\t\t{this.props.patient.medicine.map(\r\n\t\t\t\t\t(medicine, x) =>\r\n\t\t\t\t\t\tmoment(medicine.end) < moment() || medicine.stopped ? (\r\n\t\t\t\t\t\t\t<div key={x} id=\"medicine\">\r\n\t\t\t\t\t\t\t\t<h4>{moment(medicine.start).format(\"MM-DD-YYYY\")}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{moment(medicine.end).format(\"MM-DD-YYYY\")}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{medicine.name.match(/(\\w+)/)[0]}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{medicine.strength}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{medicine.dose}</h4>\r\n\t\t\t\t\t\t\t\t<h4>{medicine.stopped}</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcreate_medicine() {\r\n\t\tlet {\r\n\t\t\tselected_medicine_option,\r\n\t\t\tselected_medicine_dose_option,\r\n\t\t\tstart_date,\r\n\t\t\tend_date\r\n\t\t} = this.state;\r\n\r\n\t\tif (\r\n\t\t\tselected_medicine_option &&\r\n\t\t\tselected_medicine_dose_option &&\r\n\t\t\tstart_date &&\r\n\t\t\tend_date &&\r\n\t\t\tselected_medicine_option !== \"medicine\"\r\n\t\t) {\r\n\t\t\tlet medicine = {\r\n\t\t\t\tstart: moment(start_date).format(\"YYYY-MM-DD\"),\r\n\t\t\t\tend: moment(end_date).format(\"YYYY-MM-DD\"),\r\n\t\t\t\tname: selected_medicine_option,\r\n\t\t\t\tdose: selected_medicine_dose_option,\r\n\t\t\t\tstrength: selected_medicine_option.match(/\\-\\s(\\w+[\\.\\d+\\w+\\s]*)$/)[1]\r\n\t\t\t};\r\n\r\n\t\t\tlet input = document.querySelector(\"#search_item_input\");\r\n\t\t\tinput.value = \"\";\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tselected_medicine_option: \"\",\r\n\t\t\t\tselected_medicine_dose_option: \"\",\r\n\t\t\t\tstart_date: null,\r\n\t\t\t\tend_date: null\r\n\t\t\t});\r\n\r\n\t\t\tthis.props.add_medicine(medicine, this.props.patient, \"medicine\");\r\n\t\t}\r\n\t}\r\n\r\n\tset_selected_medicine_option(option) {\r\n\t\tthis.setState({ selected_medicine_option: option });\r\n\t}\r\n\r\n\tset_selected_medicine_dose_option(option) {\r\n\t\tthis.setState({ selected_medicine_dose_option: option });\r\n\t}\r\n}\r\n\r\nexport default Medicine;\r\n","import React, { Component } from 'react';\r\nimport AddNote from './AddNote'\r\nimport moment from 'moment'\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            show_create_notes_panel: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"patient_profile_route\">\r\n                {this.state.show_create_notes_panel\r\n                    ? <AddNote\r\n                        close_create_notes_panel={this.close_create_notes_panel.bind(this)}\r\n                        add_note={this.props.add_note}\r\n                        patient={this.props.patient}\r\n                    /> : \"\"}\r\n                <div id=\"create_note_btn_container\">\r\n                    <button id=\"create_note_btn\"\r\n                        onClick={() => this.show_create_notes_panel()}><i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                    <button id=\"expand_notes_btn\" onClick={() => this.expand_recent_notes()}>Expand All</button>\r\n                </div>\r\n\r\n\r\n                {this.show_notes(this.props)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    show_create_notes_panel() {\r\n        this.setState({ show_create_notes_panel: true })\r\n        this.props.darken()\r\n    }\r\n\r\n    close_create_notes_panel() {\r\n        this.setState({ show_create_notes_panel: false })\r\n        this.props.darken()\r\n    }\r\n\r\n    show_notes() {\r\n        return <div id=\"notes_container\">\r\n            {this.props.patient.notes.map((note, x) =>\r\n                <div key={x} className=\"note\" onClick={(e) => this.expand_note(e.target)}>\r\n                    <span id=\"note_date\">{note.date}</span>\r\n                    <span>{note.title}</span>\r\n                    <div id=\"note_content\">{ReactHtmlParser(note.content)}</div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n\r\n    parse_note(content) {\r\n        return <div>\r\n\r\n        </div>\r\n    }\r\n\r\n    expand_note(e) {\r\n        if (e.className !== \"note\") {\r\n            let parent = e.parentNode\r\n            return parent.lastChild.classList.toggle(\"show\")\r\n        }\r\n        e.childNodes[2].classList.toggle(\"show\")\r\n    }\r\n\r\n    expand_recent_notes(e) {\r\n        let notes = document.querySelectorAll(\".note\")\r\n        Array.prototype.map.call(notes, ((note) => this.expand_note(note)))\r\n    }\r\n}\r\n\r\nexport default Notes;\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment'\r\n\r\nclass Vitals extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"patient_profile_route\">\r\n                <div id=\"vitals_container\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr id=\"vitals_head\">\r\n                                <th>Date</th>\r\n                                <th>Time</th>\r\n                                <th>Bloodpressure mmHg</th>\r\n                                <th>Pulse /min</th>\r\n                                <th>Temperature C</th>\r\n                                <th>Respiratory Rate /min</th>\r\n                                <th>Saturation %</th>\r\n                                <th>Oxygen L</th>\r\n                            </tr>\r\n                        </tbody>\r\n                        {this.render_vitals()}\r\n                    </table>\r\n\r\n                    <div className=\"add_vitals_container\">\r\n                        <input name=\"vitals_date\" type=\"date\" placeholder=\"date\" />\r\n                        <input name=\"vitals_time\" placeholder=\"time\" />\r\n                        <input type=\"number\" name=\"vitals_bloodpressure_systolic\" placeholder=\"sys\" />\r\n                        <strong>/</strong>\r\n                        <input type=\"number\" name=\"vitals_bloodpressure_diastolic\" placeholder=\"dia\" />\r\n                        <input type=\"number\" name=\"vitals_pulse\" placeholder=\"pulse\" />\r\n                        <input type=\"number\" name=\"vitals_temperature\" placeholder=\"temperature\" />\r\n                        <input type=\"number\" name=\"vitals_respiratory_rate\" placeholder=\"respiratory\" />\r\n                        <input type=\"number\" name=\"vitals_saturation\" placeholder=\"saturation\" />\r\n                        <input type=\"number\" name=\"vitals_oxygen\" placeholder=\"oxygen\" />\r\n                        <button onClick={() => this.add_vitals()}>Add vitals</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    add_vitals() {\r\n\r\n        let date = document.querySelector(\"input[name=vitals_date]\"),\r\n            time = document.querySelector(\"input[name=vitals_time]\"),\r\n            blood_pressure_systolic = document.querySelector(\"input[name=vitals_bloodpressure_systolic]\"),\r\n            blood_pressure_diastolic = document.querySelector(\"input[name=vitals_bloodpressure_diastolic]\"),\r\n            pulse = document.querySelector(\"input[name=vitals_pulse]\"),\r\n            temperature = document.querySelector(\"input[name=vitals_temperature]\"),\r\n            respiratory_rate = document.querySelector(\"input[name=vitals_respiratory_rate]\"),\r\n            saturation = document.querySelector(\"input[name=vitals_saturation]\"),\r\n            oxygen = document.querySelector(\"input[name=vitals_oxygen]\")\r\n\r\n        let vitals = {\r\n            date: date.value ? date.value : moment().format(\"DD-MM-YYYY\"),\r\n            time: time.value ? time.value : moment().format('h:mm:ss a'),\r\n            bloodpressure: {\r\n                \"systolic\": blood_pressure_systolic.value,\r\n                \"diastolic\": blood_pressure_diastolic.value\r\n            },\r\n            temperature: temperature.value,\r\n            pulse: pulse.value,\r\n            respiratory_rate: respiratory_rate.value,\r\n            saturation: saturation.value,\r\n            oxygen: oxygen.value\r\n        }\r\n\r\n        this.props.add_vitals(vitals, this.props.patient, \"vitals\")\r\n\r\n        date.value = \"\",\r\n            time.value = \"\",\r\n            blood_pressure_systolic.value = \"\",\r\n            blood_pressure_diastolic.value = \"\",\r\n            pulse.value = \"\",\r\n            temperature.value = \"\",\r\n            respiratory_rate.value = \"\",\r\n            saturation.value = \"\",\r\n            oxygen.value = \"\"\r\n    }\r\n\r\n    render_vitals() {\r\n        return <tbody className=\"vitals_records\">\r\n            {this.props.patient.vitals.map((vital, x) =>\r\n                <tr key={x}>\r\n                    <th>{vital.date}</th>\r\n                    <th>{vital.time}</th>\r\n                    <th>{vital.bloodpressure.systolic}/{vital.bloodpressure.diastolic}</th>\r\n                    <th>{vital.pulse} </th>\r\n                    <th>{vital.temperature}</th>\r\n                    <th>{vital.respiratory_rate}</th>\r\n                    <th>{vital.saturation}</th>\r\n                    <th>{vital.oxygen}</th>\r\n                </tr>)}</tbody>\r\n    }\r\n}\r\n\r\n\r\n{/* date\r\ntime\r\nbloodpressure, systolic /diastolic\r\npulse, integer\r\ntemperature, celsius\r\nrespiratory_rate, integer\r\nsaturation, percentage\r\noxygen ,liter */}\r\nexport default Vitals;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport DateTime from \"react-datetime\";\r\n\r\nclass BookPanel extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tstart_date: null,\r\n\t\t\tend_date: null\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"book_panel_container\">\r\n\t\t\t\t<button id=\"close_book_panel_btn\" onClick={this.props.close_book_panel}>\r\n\t\t\t\t\t<i className=\"fa fa-window-close-o\" aria-hidden=\"true\" />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<div id=\"book_panel_fields\">\r\n\t\t\t\t\t<DateTime\r\n\t\t\t\t\t\tdefaultValue={this.props.selected_slot.start}\r\n\t\t\t\t\t\tvalue={this.state.start_date}\r\n\t\t\t\t\t\tonChange={val => this.set_date(val, \"start\")}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<DateTime\r\n\t\t\t\t\t\tdefaultValue={this.props.selected_slot.end}\r\n\t\t\t\t\t\tvalue={this.state.end_date}\r\n\t\t\t\t\t\tonChange={val => this.set_date(val, \"end\")}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<select name=\"book_patient_select\">\r\n\t\t\t\t\t\t<option />\r\n\t\t\t\t\t\t{this.props.patients.map((patient, x) => (\r\n\t\t\t\t\t\t\t<option key={x}>{patient.name}</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tplaceholder=\"description...\"\r\n\t\t\t\t\t\tname=\"book_appointment_description\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button onClick={() => this.construct_appointment()}>Create</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tset_date(val, type) {\r\n\t\tif (type === \"start\") {\r\n\t\t\tthis.setState({ start_date: val._d });\r\n\t\t}\r\n\r\n\t\tif (type === \"end\") {\r\n\t\t\tthis.setState({ end_date: val._d });\r\n\t\t}\r\n\t}\r\n\r\n\tconstruct_appointment() {\r\n\t\tlet description = document.querySelector(\r\n\t\t\t\t\"textarea[name=book_appointment_description]\"\r\n\t\t\t),\r\n\t\t\tpatient = document.querySelector(\"select[name=book_patient_select]\"),\r\n\t\t\tstart_date = this.props.selected_slot.start,\r\n\t\t\tend_date = this.props.selected_slot.end;\r\n\r\n\t\tif (this.state.start_date && this.state.end_date) {\r\n\t\t\tstart_date = new Date(this.state.start_date);\r\n\t\t\tend_date = new Date(this.state.end_date);\r\n\t\t}\r\n\r\n\t\tif (!patient.value.match(/^\\s*$/)) {\r\n\t\t\tlet appointment = {\r\n\t\t\t\tdate: moment().format(\"MM-DD-YYYY, h:mm\"),\r\n\t\t\t\ttitle: patient.value,\r\n\t\t\t\tdesc: description.value,\r\n\t\t\t\tstart: start_date,\r\n\t\t\t\tend: end_date\r\n\t\t\t};\r\n\r\n\t\t\tthis.props.history.push(\"/patients\");\r\n\t\t\tthis.props.add_appointment(appointment, patient.value, \"appointment\");\r\n\t\t\tthis.props.close_book_panel();\r\n\r\n\t\t\t(description.value = \"\"), (patient.value = \"\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tstart_date: null,\r\n\t\t\t\tend_date: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default BookPanel;\r\n","import React, { Component } from 'react';\r\n\r\nclass DropDown extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"dropdown_container\"\r\n                onClick={(e) => this.toggle_select_dropdown_option(e)}>\r\n\r\n                <div id=\"dropdown_selected_option\">\r\n                    {this.props.selected_option}\r\n                    <i className=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>\r\n                </div>\r\n\r\n                <div id={`dropdown_options_container`}>\r\n                    {this.props.items.map((item, x) =>\r\n                        <div key={x} id=\"dropdown_option\" onClick={(e) =>\r\n                            this.props.set_selected_option(e.target.textContent)}>\r\n                            {item}\r\n                        </div>)}\r\n\r\n                    <div>\r\n                        <strong contentEditable\r\n                            data-text={`New ${this.props.category}`}\r\n                            onKeyPress={(e) => this.create_new_dropdown_option(e)}>\r\n                        </strong>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    create_new_dropdown_option(e) {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault()\r\n            this.props.add_dropdown_item(e.target.textContent, this.props.category_list)\r\n            e.target.textContent = \"\"\r\n        }\r\n    }\r\n\r\n    toggle_select_dropdown_option(e) {\r\n        if (e.target.nodeName === \"I\") {\r\n            let parent = e.target.parentNode\r\n            return parent.nextSibling.classList.toggle(\"show\")\r\n        }\r\n\r\n        if (e.target.childNodes[0].nodeName === \"STRONG\") { return; }\r\n\r\n        if (e.target.id === \"dropdown_option\" && e.target.textContent !== \"\") {\r\n            this.props.set_selected_option(e.target.textContent)\r\n            return e.target.parentNode.classList.toggle(\"show\")\r\n        }\r\n\r\n        if (e.target.nextSibling.id === \"dropdown_options_container\") {\r\n            return e.target.nextSibling.classList.toggle(\"show\")\r\n        }\r\n    }\r\n}\r\n\r\nexport default DropDown;","import React, { Component } from 'react';\r\n\r\nclass Searchable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searched_options: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"searchable_container\">\r\n                <input type=\"text\"\r\n                    placeholder={`search ${this.props.category}`}\r\n                    id=\"search_item_input\"\r\n                    onChange={(e) => this.search_item(e, this.props.options_list)} />\r\n\r\n                {this.state.searched_options.length > 0\r\n                    ? this.render_options()\r\n                    : \"\"}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    search_item(e) {\r\n        let value = e.target.value,\r\n            searched_options = []\r\n\r\n        if (value === \"\") {\r\n            return this.setState({\r\n                searched_options: []\r\n            })\r\n        }\r\n\r\n        if (value.length > 0) {\r\n\r\n            for (let i = 0; i < this.props.options_list.length; i++) {\r\n                let option = this.props.options_list[i],\r\n                    option_name = option.toLowerCase();\r\n\r\n                if (option_name.startsWith(value)) {\r\n                    searched_options.push(option)\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.setState({ searched_options: searched_options })\r\n    }\r\n\r\n    set_option(e) {\r\n        this.props.set_selected_option(e.target.textContent)\r\n        e.target.parentNode.previousSibling.value = e.target.textContent\r\n\r\n        return this.setState({ searched_options: [] })\r\n    }\r\n\r\n    render_options() {\r\n        return <div id=\"searchable_options_container\">\r\n            {this.state.searched_options.map((option, x) =>\r\n                <div id=\"found_option\" key={x} onClick={(e) => this.set_option(e)}>\r\n                    {option}\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Searchable;","let ip_address = window.ip_address ? window.ip_address : \"localhost\"\r\nexport default ip_address","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\tReactDOM.render(<App />, document.querySelector(\"#app\"));\r\n});\r\n"]}